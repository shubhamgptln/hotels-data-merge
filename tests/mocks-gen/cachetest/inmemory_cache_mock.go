// Code generated by MockGen. DO NOT EDIT.
// Source: store.go

// Package cachetest is a generated GoMock package.
package cachetest

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTTLCacheClient is a mock of TTLCacheClient interface.
type MockTTLCacheClient struct {
	ctrl     *gomock.Controller
	recorder *MockTTLCacheClientMockRecorder
}

// MockTTLCacheClientMockRecorder is the mock recorder for MockTTLCacheClient.
type MockTTLCacheClientMockRecorder struct {
	mock *MockTTLCacheClient
}

// NewMockTTLCacheClient creates a new mock instance.
func NewMockTTLCacheClient(ctrl *gomock.Controller) *MockTTLCacheClient {
	mock := &MockTTLCacheClient{ctrl: ctrl}
	mock.recorder = &MockTTLCacheClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTTLCacheClient) EXPECT() *MockTTLCacheClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockTTLCacheClient) Get(key string) (interface{}, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockTTLCacheClientMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTTLCacheClient)(nil).Get), key)
}

// Remove mocks base method.
func (m *MockTTLCacheClient) Remove(key string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Remove", key)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Remove indicates an expected call of Remove.
func (mr *MockTTLCacheClientMockRecorder) Remove(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockTTLCacheClient)(nil).Remove), key)
}

// SetWithTTL mocks base method.
func (m *MockTTLCacheClient) SetWithTTL(key string, data interface{}, ttl time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetWithTTL", key, data, ttl)
}

// SetWithTTL indicates an expected call of SetWithTTL.
func (mr *MockTTLCacheClientMockRecorder) SetWithTTL(key, data, ttl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetWithTTL", reflect.TypeOf((*MockTTLCacheClient)(nil).SetWithTTL), key, data, ttl)
}

// MockMethods is a mock of Methods interface.
type MockMethods struct {
	ctrl     *gomock.Controller
	recorder *MockMethodsMockRecorder
}

// MockMethodsMockRecorder is the mock recorder for MockMethods.
type MockMethodsMockRecorder struct {
	mock *MockMethods
}

// NewMockMethods creates a new mock instance.
func NewMockMethods(ctrl *gomock.Controller) *MockMethods {
	mock := &MockMethods{ctrl: ctrl}
	mock.recorder = &MockMethodsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMethods) EXPECT() *MockMethodsMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockMethods) Delete(key string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", key)
}

// Delete indicates an expected call of Delete.
func (mr *MockMethodsMockRecorder) Delete(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockMethods)(nil).Delete), key)
}

// Get mocks base method.
func (m *MockMethods) Get(key string) (interface{}, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMethodsMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMethods)(nil).Get), key)
}

// Set mocks base method.
func (m *MockMethods) Set(key, value string, ttl time.Duration) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", key, value, ttl)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockMethodsMockRecorder) Set(key, value, ttl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockMethods)(nil).Set), key, value, ttl)
}
